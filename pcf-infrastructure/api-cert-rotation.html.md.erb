---
title: Managing TLS Certificates
owner: OpsMan
---

This topic describes how to manage internal Certificate Authorities (CAs) and leaf certificates in Pivotal Cloud Foundry (PCF) that are stored or managed by Ops Manager. It includes:

* How to check expiration dates for specific types of CAs and certificates ("certs").
* How to rotate specific types of CAs and certs.
* A [master procedure](#check-and-rotate) for checking and rotating all CAs and certs in Ops Manager that require manual checking and rotation.

For information about rotating IPsec certificates, see [Rotating IPsec Certificates](../../../addon-ipsec/1-8/credentials.html).

For information about using trusted third-party certificates for both apps hosted on PCF and internal PCF components, see [Setting Trusted Certificates](../../customizing/trusted-certificates.html).

## <a id='intro'></a> Introduction

Internal certificates enable PCF internal components to communicate with each other securely, using TLS. Internal root and intermediate CAs issue these leaf-level certs in a [chain of trust](https://tools.ietf.org/html/rfc8446).

To keep PCF running, you must keep track of which certs are set to expire soon, and rotate them before they expire. To do this, you can run the [Check and Rotate Certs](#check-and-rotate) procedure.

### <a id='types'></a> Certificate Types

Three types of PCF internal certs require planned rotation:

* **The Ops Manager root CA** issues other certs that PCF uses.
    - Returned by the Ops Manager API's [`certificate_authorities`](https://docs.pivotal.io/pivotalcf/opsman-api/#listing-the-root-certificate-authorities) endpoint.

* **Non-configurable** certs are leaf certs directly underneath the Ops Manager root CA or issued by intermediate CAs under the root CA.
    - PCF users can rotate leaf certs, but never need to explicitly rotate intermediate CAs, because they rotate automatically when the root CA is rotated.
    - Returned by the Ops Manager API's [`deployed/certificates`](https://docs.pivotal.io/pivotalcf/opsman-api/##getting-information-about-certificates-from-products) endpoint.

* **Configurable** certs are leaf certs supplied by the user and pasted into configuration fields in Ops Manager.
    - For convenience, some configuration panes include a **Generate RSA Certificate** link that supplies valid certificates, but users can obtain configurable certs from elsewhere.
    - Returned by the Ops Manager API's [`deployed/certificates`](https://docs.pivotal.io/pivotalcf/opsman-api/##getting-information-about-certificates-from-products) endpoint, alongside non-configurable certs.

In addition to the types above, Pivotal products such as Pivotal Application Service (PAS) and Pivotal Container Service (PKS) issue their own **tile certificates** that are not managed by or visible to the Ops Manager API. These tile certs rotate automatically with product upgrades, and so they do not require planned rotation.

### <a id='check-and-rotate'></a> Master Procedure: Check and Rotate Certs

Ops Manager's root CA expires after four years after creation, but most non-configurable certs expire after two years. Configurable certs generated by Ops Manager also typically expire after two years. 

Rotating the Ops Manager root CA automatically rotates all configurable certs, but a shorter and easier procedure rotates only the configurable certs, without also rotating the root CA.

The following master procedure checks expiration dates of different types of internal certs and rotates them only as necessary. You can run this procedure periodically, or when records show that your deployment is currently using certs that expire soon:

1. Follow the [Check Ops Manager Root CA Expiration Date](#root-expiry) procedure and record your root CA expiration date.

1. Follow the [Check Leaf Certificate Expiration Dates](#leaf-expiry) procedure and record any leaf certs that are expiring soon.

1. Follow the [Identify Non-Configurable, Configurable, and Unrotatable Leaf Certs](#unrotatable) to determine which procedures to follow in order to rotate your leaf certs.

1. Proceed as follows to rotate your certs as needed:
  1. If you have leaf certs expiring soon that cannot be rotated using the Ops Manager API, call Pivotal Support.
  1. If your root CA expires soon, follow the [Regenerate and Rotate CAs and Certificates](#rotate-ca) procedure.
  1. If your leaf certs expire soon, but not your root CA, follow the [Rotate Leaf Certificates](#rotate-leaf) procedure.

## <a id='root-expiry'></a> Check Ops Manager Root CA Expiration Date

1. To retrieve the Ops Manager root CA, use `curl` to make an Ops Manager API call to the `https://OPS-MAN-FQDN/api/v0/certificate_authorities` endpoint. For example:
    <pre class='terminal'>
    $ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    </pre>

1. To make the JSON output more readable, you can pipe it to [jq](https://stedolan.github.io/jq/) or another text editor with JSON formatting.

1. In the `certificate_authorities` list returned, if there is more than one, find the CA with `"active": true`.

1. To determine its expiration date of the active CA, refer to its `expires_on` value. For example, the root CA shown below expires on September 5, 2019:
    <pre class='terminal'>
{
  "certificate\_authorities": [
    {
      "guid": "9c9a110c8f82a1e4aaca",
      "issuer": "Pivotal",
      "created\_on": "2017-09-05T22:47:53Z",
      "expires\_on": "2019-09-05T22:47:53Z",
      "active": true,
      "cert_pem": "\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\[...]
      \n-----END CERTIFICATE\-\-\-\-\-\n"
    </pre>


## <a id='non-config-cert-expiry'></a> Check Non-Configurable CA Expiration Dates


The non-configurable certificates in your deployment expire every two years. To retrieve information about the expiration dates for RSA and CA certificates in your deployment, do the following:

1. Perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN`.

1. To check the system for certificates that expire within a given time interval, use `curl` to make an API call.<br><br>
    Use the `https://OPS-MAN-FQDN/api/v0/deployed/certificates?expires_within=TIME` endpoint, replacing `TIME` with an integer and a letter code.
    Valid letter codes are `d` for days, `w` for weeks, `m` for months, and `y` for years.<br><br>
    For example, run the following command to search for certificates expiring within six months:
    <pre>
    $ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/deployed/certificates?expires\_within=6m" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    </pre>
    Replace `YOUR-UAA-ACCESS-TOKEN` with the <code>access\_token</code> value you recorded in the previous step.


## <a id='config'></a> Configurable CAs

To secure internal communication between components, PCF uses two kinds of configurable certificates:

- **BOSH DNS certificates** issued by a CA stored in CredHub. Ops Manager calls the CredHub API to generate and store these.
- **Other internal certificates** issued by a CA that Ops Manager creates directly.

To regenerate both types of certificates at once, call the [`regenerate` endpoint](https://docs.pivotal.io/pivotalcf/2-2/opsman-api/#listing-the-root-certificate-authorities) in the Ops Manager API.

### <a id='rotate-config'></a> Rotate Configurable Certificates

Configurable certificates are certificates you generate yourself, as opposed to certificates that are given to you by the company whose product you are using. There are several types of configurable certificates. One such example is SAML service provider credentials.

Pivotal Application Service (PAS) UAA service holds a CA certificate which signs outbound communication to an external SAML identity provider. This CA certificate also has a 2-year expiration period and requires regeneration after this time.

SAML service provider credentials are only required for your PAS deployment's UAA service if all of these conditions are met:

* You are using SSO in production for apps.
* You are using SAML identity providers for SSO service plans.
* You had Ops Manager generate a certificate for you by clicking the **Generate RSA Certificate** button.
* You are validating the signature of SAML authentication request with your identity provider.

### <a id='rotate-saml-ca'></a> Regenerate and Rotate SAML Service Provider Certificates

If PAS is configured to use SSO/SAML and your identity provider is validating the requests, you must import a new certificate to avoid disrupting PAS when you rotate the certificate.

To regenerate and rotate SAML service provider certificates, do the following:

1. Disable certificate validation in your identity provider.

1. Navigate to **UAA > SAML Service Provider Credentials** in your PAS tile.

1. Click **Generate RSA Certificate**.

1. Following the procedure in the [Configure SAML as an Identity Provider for PCF](../../../opsguide/auth-sso.html#configure-saml-for-pcf) section of the _Configuring Authentication and Enterprise SSO for PAS_ topic to import the new certificate to your identity provider.
These steps will vary depending on which SAML provider you are using.
  * If using ADFS, see [Configure Active Directory Federation Services as an Identity Provider](../../../p-identity/1-5/adfs/config-adfs.html).
  * If using CA SSO, see [Configure CA Single Sign-On as an Identity Provider](../../../p-identity/1-5/ca-sso/config-ca-sso.html).
  * If using Okta, see [Configure Okta as an Identity Provider](../../../p-identity/1-5/okta/config-okta.html).
  * If using PingFederate,Â see [Configure PingFederate as an Identity Provider](../../../p-identity/1-5/pingfederate/config-pingfederate.html).

1. Re-enable certificate validation in your identity provider.


## <a id='non-config'></a> Non-Configurable Certificates

Non-configurable certificates are certificates that are given to you by the company whose product you are using, as opposed to certificates you generate yourself.

### <a id='rotate-non-config'></a> Rotate Non-Configurable Certificates

To rotate all your certificates, including creating and applying a new root certificate, follow the procedure in [Regenerate and Rotate CA Certificates](#rotate-ca).

To rotate non-configurable certificates without creating a new root certificate, skip ahead to [Step 3: Regenerate Non-Configurable Certificates](#regenerate).

<p class='note'><strong>Note:</strong> The <a href="#rotate-ca">Regenerate and Rotate CA Certificates</a> procedure does not work when your certificates have already expired.<br>
If the <a href="#non-config-cert-expiry">Check Non-Configurable Certificate Expiration Dates</a> procedure indicates that your certificates have expired, contact <a href="https://support.pivotal.io/">Pivotal Support</a> for guidance.</p>

### <a id='rotate-ca'></a> Regenerate and Rotate CAs and Certificates

<p class="note warning"><strong>WARNING:</strong> You must complete the procedures in this topic in the exact order specified below. Otherwise, you risk doing damage to your deployment.</p>

Depending on the requirements of your deployment, you may need to rotate your CA certificates. CA certificates can expire or fall out of currency, or your organization's security compliance policies may require you to rotate CA certificates periodically.

You can rotate the CA certificates in your Pivotal Cloud Foundry (PCF) deployment using `curl`. PCF provides different API calls with which you can manage certificates and CAs. New CA certificates generated through this process use SHA-256 encryption.

These API calls allow you to create new CAs, apply them, and delete old CAs. The process of activating a new CA and rotating it in gives new certificates to the BOSH Director. The BOSH Director then passes the certificates to other components in your PCF deployment.

<p class="note"><strong>Note:</strong> These procedures require you to return to Ops Manager and click <strong>Apply Changes</strong> periodically. Clicking <strong>Apply Changes</strong> redeploys the BOSH Director and its tiles. If you apply your changes during each procedure, a successful redeploy verifies that the certificate rotation process is proceeding correctly.</p>

#### <a id='add-new-ca'></a> Step 1: Add a New CA

Use the following procedure to add a new CA. You can use a Pivotal-generated CA or provide your own CA using the API calls in this section.

1. Perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN` in the following procedures.
  <p class="note"><strong>Note:</strong> When you record your Ops Manager access token, make sure you remove any new line characters such as <code>/n</code>. Otherwise the API call in the following step will not succeed.</p>

1. To use a Pivotal-generated CA, use `curl` to make the following API call:
<pre>
$ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate\_authorities/generate" \
      -X POST \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
      -H "Content-Type: application/json" \
      -d '{}'
</pre>
If the command succeeds, the API returns a response that includes the new CA certificate.
  <pre class="terminal">
      HTTP/1.1 200 OK
    {
      "guid": "f7bc18f34f2a7a9403c3",
      "issuer": "Pivotal",
      "created\_on": "2017-01-19",
      "expires\_on": "2021-01-19",
      "active": false,
      "cert\_pem": "-----BEGIN EXAMPLE CERTIFICATE-----
      MIIC+zCCAeOgAwIBAgIBADANBgkqhkiG9w0BAQsFADAfMQswCQYDVQQGEwJVUzEQ
      EXAMPLEoCgwHUGl2b3RhbDAeFw0xNDarthgyMTQyMjVaFw0yMTAxMTkyMTQyMjVa
      EXAMPLEoBgNVBAYTAlVTMRAwDgYDVVaderdQaXZvdGFsMIIBIjANBgkqhkiG9w0B
      EXAMPLEoAQ8AMIIBCgKCAQEAyV4OhPIIZTEym9OcdcNVip9Ev0ijPPLo9WPLUMzT
      EXAMPLEo/TgD+DP09mwVXfqwBlJmoj9DqRED1x/6bc0Ki/BAFo/P4MmOKm3QnDCt
      EXAMPLEooqgA++2HYrNTKWJ5fsXmERs8lK9AXXT7RKXhktyWWU3oNGf7zo0e3YKp
      EXAMPLEoh1NwIbNcGT1AurIDsxyOZy1HVzBLTisMyDogJmSCLsOw3qUDQjatjXKw
      EXAMPLEojG3nv2hvD4/aTOiHuKM3+AGbnaS2MdIOvFOh/7Y79tUp89csK0gs6uOd
      EXAMPLEohe4DcKw5CzUTfHKNXgHyeoVOBPcVQTp4lJp1iQIDAQABo0IwQDAdBgNV
      EXAMPLEoyH4y7VEuImLStXM0CKR8uVqxX/gwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
      EXAMPLEoBAMCAQYwDQYJKoZIhvcNAQELBQADggEBALmHOPxdyBGnuR0HgR9V4TwJ
      EXAMPLEoGLKVT7am5z6G2Oq5cwACFHWAFfrPG4W9Jm577QtewiY/Rad/PbkY0YSY
      EXAMPLEokrfNjxjxI0H2sr7qLBFjJ0wBZHhVmDsO6A9PkfAPu4eJvqRMuL/xGmSQ
      EXAMPLEoCynMNz7FgHyFbd9D9X5YW8fWGSeVBPPikcONdRvjw9aEeAtbGEh8eZCP
      EXAMPLEob33RuR+CTNqThXY9k8d7/7ba4KVdd4gP8ynFgwvnDQOjcJZ6Go5QY5HA
      EXAMPLEoPFW8pAYcvWrXKR0rE8fL5o9qgTyjmO+5yyyvWIYrKPqqIUIvMCdNr84=
    	-----END EXAMPLE CERTIFICATE-----
    	"
  </pre>
<br>
To provide your own CA, see [Adding a Custom Certificate Authority](./custom-ca-cert.html#add).

1. Confirm that your new CA has been added by listing all of the root CAs for Ops Manager:
  <pre>
  $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate\_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
  </pre>
  <br>
  The API call returns the following:
  <pre class="terminal">
    HTTP/1.1 200 OK
    {
      "certificate\_authorities": [
        {
          "guid": "f7bc18f34f2a7a9403c3",
          "issuer": "Pivotal",
          "created\_on": "2017-01-09",
          "expires\_on": "2021-01-09",
          "active": true,
          "cert\_pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
        }
        {
          "guid": "a8ee01e33e3e3e3303e3",
          "issuer": "Pivotal",
          "created\_on": "2017-04-09",
          "expires\_on": "2021-04-09",
          "active": false,
          "cert\_pem": "-----BEGIN CERTIFICATE-----\zBBBC+eAAAe1gAwAAAeZ....etc"
        }
      ]
    }
  </pre>
  Identify your newly added CA, which has `active` set to `false`. Record its GUID.

1. Navigate to `https://OPS-MAN-FQDN` in a browser and log in to Ops Manager.

1. Click the **BOSH Director** tile in the **Installation Dashboard**.

1. Select the **Director Config** pane.

1. Select **Recreate All VMs**. This propagates the new CA to all VMs to prevent downtime.

1. Click **Review Pending Changes**, then **Apply Changes**. When the deploy finishes, continue to the next section.

#### <a id='activate-new-ca'></a> Step 2: Activate the New CA

1. Use `curl` to make an API call to activate the new CA, replacing `CERT-GUID` with the GUID of your CA that you retrieved in the previous section:
  <pre>$ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate\_authorities/CERT-GUID/activate" \
      -X POST \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
      -H "Content-Type: application/json" \
      -d '{}'
  </pre>
  The API returns a successful response:
  <pre class="terminal">HTTP/1.1 200 OK</pre>

1. List your root CAs to confirm that the new CA is active:
<pre>
  $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate\_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
  </pre>
  Examine the response to ensure that your new CA has `active` set to `true`.

#### <a id='regenerate'></a> Step 3: Regenerate Non-Configurable Certificates to Apply the New CA

1. Use `curl` to make an API call to regenerate all non-configurable certificates and apply the new CA to your existing BOSH Director:
<pre>
  $ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate\_authorities/active/regenerate" \
        -X POST \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
        -H "Content-Type: application/json" \
        -d '{}'
</pre>
The API returns a successful response:
<pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to Ops Manager, click **Review Pending Changes**, and click **Apply Changes**. When the deploy finishes, continue to the next section.

#### <a id='delete'></a> Step 4: Delete the Old CA

1. List your root CAs to retrieve the GUID of your old, inactive CA:
<pre>
  $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate\_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

1. Use `curl` to make an API call to delete your old CA, replacing `OLD-CERT-GUID` with the GUID of your old, inactive CA:
<pre>
  $ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate\_authorities/:OLD-CERT-GUID" \
        -X DELETE \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>
The API returns a successful response.
<pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to Ops Manager, click **Review Pending Changes**, and click **Apply Changes**.


## <a id='other'></a> Other Certificate Operations

To manage and retrieve information about certificates in your deployment, use the API calls in this section.

Perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN`.

### <a id='generate-rsa-certs'></a> Generate a Single RSA Certificate

To generate and return a new RSA certificate signed by the root CA, use `curl` to make the following API call:
<pre>
$ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/certificates/generate \
      -X POST \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

### <a id='root-certs'></a> Retrieve the Root Certificate

To return the Ops Manager root certificate as a file, use `curl` to make the following API call:
<pre>
$ curl "https<span>:</span>//OPS-MAN-FQDN/download\_root\_ca\_cert \
      -X GET \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

To return the Ops Manager root certificate as JSON, use `curl` to make the following API call:
<pre>
$ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/security/root\_ca\_certificate \
      -X GET \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

### <a id='list-rsa-certs'></a> List all RSA Certificates

To return metadata from all deployed RSA certificates visible to Ops Manager, except the root CAs, use `curl` to make the following API call:
<pre>
$ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/deployed/certificates \
      -X GET \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

### <a id='config-cert-expiry'></a> Check Expirations of and Rotate Configurable Certificates

We recommend you only rotate configurable certificates as part of one of the above non-configurable rotation procedures.  If you're absolutely sure that there are no other certificates that need rotation, you can run this section by itself by simply applying changes at the end.

Some PCF runtimes and components require operators to provide their own certificates, for example for terminating SSL traffic to the PAS routing tier. The Ops Manager interface lets you generate these in place or paste in your own. These are _configurable certificates_.

While it is your responsibility to provide and manage these certificates, Ops Manager can give you a list of ones that will soon expire as follows:

1. Perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN`.

1. To check the system for certificates that expire within a given time interval, use `curl` to make an API call.<br><br>
    Use the `https://OPS-MAN-FQDN/api/v0/deployed/certificates?expires_within=TIME` endpoint, replacing `TIME` with an integer and a letter code.
    Valid letter codes are `d` for days, `w` for weeks, `m` for months, and `y` for years.<br><br>
    For example, run the following command to search for certificates expiring within six months:
    <pre>
    $ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/deployed/certificates?expires\_within=6m" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    </pre>
    Replace `YOUR-UAA-ACCESS-TOKEN` with the <code>access\_token</code> value you recorded in the previous step.

1. Find _only_ the certificates with `"configurable": true`, such as this certificate:
```
    {
      "configurable": true,
      "property_reference": ".properties.networking_poe_ssl_certs[0].certificate",
      "product_guid": "cf-36066831c119c39736d3",
      ...
    },
```

If any configurable certificates are found above, you'll need to locate these certificates inside of the ops manager interface and provide (or generate) a new value for each.  The `product_guid` field helps you locate which tile the configurable certificate belongs to, but you might have to check each form page to find where the certificate appears. We suggest using the `property_reference` field as a hint for where to start looking.

After providing new values for these configurable certificates continue the rotating non-configurable credentials procedure that you're in the middle of.
