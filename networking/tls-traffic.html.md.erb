---
title: Types of TLS Traffic in PCF
owner: 
---

This topic describes the different types of network traffic that happen in Pivotal Cloud Foundry (PCF) and how traffic is encrypted with TLS. 

## <a id="client-to-app"></a> Traffic between an External Client and an App

The following diagram illustrates the flow of traffic from a client making a request to an app: 

<%= image_tag("ingress-traffic.png", :class => "no-border") %>

The following table describes each component involved in receiving a client request and 
where their certificates for TLS termination originate.

<table>
	<tr>
		<th style="width: 30%">Component</th>
		<th>Certificate Source</th>
	</tr>
	<tr>
		<td>External Load Balancer</td>
		<td>Enterprise Root CA.</td>
	</tr>
	<tr>
		<td>Gorouter</td>
		<td>Enterprise Root CA.</td>
	</tr>
	<tr>
		<td>App</td>
		<td>PCF root CA dedicated to app instance identity. For more information, see <a href="./tls-info.html#container-creds">App Instance Container Identity Credentials</a>.</td>
	</tr>
</table>

##  <a id="component-to-component"></a> Traffic between Platform Components

The following diagram illustrates the TLS communication between platform components. 

<%= image_tag("platform-components.png", :class => "no-border") %>

The CredHub instance in BOSH generates certificates for all components in PCF. The certificates are self signed by default. To issue certificates signed by your enterprise, you can add a custom CA to CredHub.

##  <a id="app-to-app"></a> Traffic between Apps

The following diagram illustrates the TLS communication between apps running on PCF. In this example, the `frontend-blue` and `frontend-green` apps both receive client requests, but only the `frontend-green` app is allowed to communicate with the `backend` app. 

<%= image_tag("between-app-traffic.png", :class => "no-border") %>

Apps can communicate with each other over TLS using certificates generated by a PCF root CA dedicated to app instance identity. For more information, see <a href="./tls-info.html#container-creds">App Instance Container Identity Credentials</a>.

Developers specify which apps are allowed to communicate using container networking policies. For more information, see [Configuring Container-to-Container Networking](../../devguide/deploy-apps/cf-networking.html).

##  <a id="app-to-service"></a> Traffic between Apps and On-Platform Services

The following diagram illustrates the TLS communication between apps and on-platform services. It uses Pivotal Cloud Cache as an example of an on-platform service. 

<%= image_tag("apps-services.png", :class => "no-border") %>

BOSH CredHub issues certificates to the Pivotal Cloud Cache components. For the app, the developer must retrieve a copy of this certificate using the CredHub API and place it in the truststore for the app. For more information, see the [Developing an App Under TLS](https://docs.pivotal.io/p-cloud-cache/tls-enabled-app.html) document in the Pivotal Cloud Cache documentation. 

##  <a id="app-to-external-service"></a> Traffic between Apps and External Services

The following diagram illustrates the TLS communication between apps and external services. 

<%= image_tag("apps-external-services.png", :class => "no-border") %>

The developer must retrieve the certificate from the external service and provide it to their app. One way to do this is by placing the certificate in PAS CredHub and modifying your app to consume the certificate through the [CredHub Service Broker for PCF](https://docs.pivotal.io/credhub-service-broker/).